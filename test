#!/bin/bash
dim(){
  stat -c %s "${1}"
}
set -e
# ust & wc-actg
PATH=$PWD:$PATH
# pxz
PATH="/home/enrico/bio-bin/pxz":$PATH

# inputs
heurs=${2:-d}
sequences=${1}

for seq in $sequences; do
  results=${seq}.csv
  rm -rf "$results"
  touch "$results"
  results=$(realpath "$results")

  mkdir -p "$seq" && cd "$seq"

  # outputs
  headers="${seq},"
  infile_sizes_empty_header="infile_sizes_empty_header,"
  n_kmers="n_kmers,"
  ust_c_lb="ust_c_lb,"
  ust_c="ust_c,"
  outfile_fa_sizes="outfile_fa_sizes,"
  outfile_fa_zipped_sizes="outfile_fa_zipped_sizes,"
  outfile_counts_sizes="outfile_counts_sizes,"
  outfile_counts_zipped_sizes="outfile_counts_zipped_sizes,"
  outfile_counts_enc_sizes="outfile_counts_enc_sizes,"
  outfile_counts_enc_zipped_sizes="outfile_counts_enc_zipped_sizes,"

  # file names
  infile="/home/enrico/bio-bin/k-mers-compression/sequences/${seq}/bcalm/${seq}.bcalm-counts.k31.fasta"
  outfile_stat=$(basename "$infile").stats.txt
  outfile_fa=$(basename "$infile").ust.fa
  outfile_fa_zipped=${outfile_fa}.xz
  outfile_counts=$(basename "$infile").ust.counts
  outfile_counts_zipped=${outfile_counts}.xz
  outfile_counts_enc=${outfile_counts}.enc
  outfile_counts_enc_zipped=${outfile_counts_enc}.xz

   # same output for all sequences
  infile_sizes_empty_header="${infile_sizes_empty_header}$(wc-actg "$infile" "-h=1"),"

  for heur in "${heurs[@]}"; do
    mkdir -p "$heur" && cd "$heur"

    # shellcheck disable=SC2086
    [ -f "$outfile_fa" ] || ust -k 31 -a 1 -h $heur -i "$infile"
    echo "* Compressing ${outfile_fa}..."
    [ -f "$outfile_fa_zipped" ] || pxz --extreme -k -f "$outfile_fa"
    echo "* Compressing ${outfile_counts}..."
    [ -f "$outfile_counts_zipped" ] || pxz --extreme -k -f "$outfile_counts"
    echo "* Encoding ${outfile_counts}..."
    [ -f "$outfile_counts_enc" ] || enc "$outfile_counts"
    echo "* Compressing ${outfile_counts_enc}..."
    [ -f "$outfile_counts_enc_zipped" ] || pxz --extreme -k -f "$outfile_counts_enc"

    headers="${headers}${heur},"
    # infile_sizes_empty_header="${infile_sizes_empty_header}$(wc-actg "$infile" "-h=1"),"
    n_kmers="${n_kmers}$(grep "N_KMER" "$outfile_stat" | awk -F '=' '{print $2;}'),"
    ust_c_lb="${ust_c_lb}$(grep "C_LB" "$outfile_stat" | awk -F '=' '{print $2;}'),"
    ust_c="${ust_c}$(grep "C_USTITCH_twoway" "$outfile_stat" | awk -F '=' '{print $2;}'),"
    outfile_fa_sizes="${outfile_fa_sizes}$(dim "$outfile_fa"),"
    outfile_fa_zipped_sizes="${outfile_fa_zipped_sizes}$(dim "$outfile_fa_zipped"),"
    outfile_counts_sizes="${outfile_counts_sizes}$(dim "$outfile_counts"),"
    outfile_counts_zipped_sizes="${outfile_counts_zipped_sizes}$(dim "$outfile_counts_zipped"),"
    outfile_counts_enc_sizes="${outfile_counts_enc_sizes}$(dim "$outfile_counts_enc"),"
    outfile_counts_enc_zipped_sizes="${outfile_counts_enc_zipped_sizes}$(dim "$outfile_counts_enc_zipped"),"
    cd ..
  done
  # print results
  printf "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n" "$headers" "$infile_sizes_empty_header" "$n_kmers" "$ust_c_lb" "$ust_c" \
  "$outfile_fa_sizes" "$outfile_fa_zipped_sizes" "$outfile_counts_sizes" "$outfile_counts_zipped_sizes" \
  "$outfile_counts_enc_sizes" "$outfile_counts_enc_zipped_sizes" >> "$results"
  cat "$results"
  cd ..
done
